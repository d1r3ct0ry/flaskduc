<!DOCTYPE html>
<html lang="pt-BR">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Calculadora de Frete - Duc Entregas</title>
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;700&display=swap" rel="stylesheet">
<link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
<style>
body, html {
    font-family: 'Poppins', sans-serif;
    background-color: #ff8235;
    color: #fff;
    height: 100%;
    margin: 0;
    padding: 0;
}

.container {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: center;
    padding: 20px 10px;
    min-height: 100vh;
    box-sizing: border-box;
}

.logo {
    max-width: 90px;
    margin-bottom: 15px;
}

.card {
    border-radius: 10px;
    width: 100%;
    max-width: 360px;
    padding: 10px;
    background: #f8f9fa;
    color: #333;
    font-size: 13px;
}

.btn-custom-orange {
    background-color: #ff8235;
    color: white;
    border: none;
    font-weight: bold;
    width: 100%;
    height: 38px;
    font-size: 14px;
}

.btn-custom-orange:hover {
    background-color: #e6732f;
}

.form-control {
    text-align: center;
    font-size: 14px;
    height: 36px;
}

.form-control::placeholder {
    font-size: 13px;
    color: #aaa;
}

.btn-outline-secondary {
    border-radius: 8px;
    background-color: #fff;
    color: #333;
    font-weight: bold;
    padding: 5px 10px;
    border: 1px solid #ccc;
    font-size: 13px;
    height: 35px;
}

.btn-outline-secondary:hover {
    background-color: #f2f2f2;
    color: #ff8235;
    border-color: #ff8235;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.hidden {
    display: none;
}

.active {
    background-color: #ff8235 !important;
    color: #fff !important;
}

.frete-card {
    color: #000;
    font-weight: 500;
    font-size: 13px;
}

label.btn.btn-outline-primary {
    padding: 5px 10px;
    font-size: 13px;
    margin-bottom: 5px;
}

</style>
</head>
<body>


<div class="container">

  <!-- Primeira Tela -->
  <div id="primeiraTela" class="text-center">
    <img src="duc.png" alt="Duc Entregas" class="logo">
    <h5 class="fw-bold mb-4" style="color:#333;">Descubra o valor da entrega</h5>

    <div class="card mb-3">
      <h6>Pacotes:</h6>
      <div class="d-flex flex-column gap-2">
        <label class="btn btn-outline-primary btn-sm text-left">
          <input type="radio" name="pacote" value="P" class="d-none"> <strong>P</strong> Até 1 kg ou até 3 peças<br>Regra: 1kg 10x20x25
        </label>
        <label class="btn btn-outline-primary btn-sm text-left">
          <input type="radio" name="pacote" value="M" class="d-none"> <strong>M</strong> Até 3 kg ou até 8 peças<br>Regra: 3kg 20x25x35
        </label>
        <label class="btn btn-outline-primary btn-sm text-left">
          <input type="radio" name="pacote" value="G" class="d-none"> <strong>G</strong> Até 6 kg ou até 15 peças<br>Regra: 6kg 25x35x40
        </label>
        <label class="btn btn-outline-primary btn-sm text-left">
          <input type="radio" name="pacote" value="XG" class="d-none"> <strong>XG</strong> Até 10 kg ou até 25 peças<br>Regra: 10kg 30x40x50
        </label>
        <label class="btn btn-outline-primary btn-sm text-left">
          <input type="radio" name="pacote" value="XXG" class="d-none"> <strong>XXG</strong> Até 15 kg ou até 35 peças<br>Regra: 15kg
        </label>
      </div>
    </div>

    <div class="mb-3" style="max-width:360px; margin:auto;">
      <input type="text" class="form-control form-control-sm" id="cep" placeholder="Digite seu CEP" maxlength="9" oninput="formatarCep(this)">
    </div>

    <div style="max-width:360px; margin:auto;">
      <button class="btn btn-success btn-sm w-100 mb-2 fw-bold" style="border-radius:10px;" onclick="buscarCep()">
        <i class="fas fa-calculator"></i> Calcular
      </button>
    <button class="btn btn-outline-secondary w-100" onclick="enviarMensagemWhatsApp()" style="border-radius: 8px; background-color: #fff; color: #333; font-weight: 500; font-size: 13px; height: 35px; padding: 5px 10px; border: 1px solid #ccc;">
        <i class="fas fa-question-circle"></i> Não sei meu CEP
    </button>

    </div>

  </div>


 <!-- Segunda Tela -->
<div id="segundaTela" class="hidden text-center">
  <!-- Loader -->
  <div id="loading" class="hidden text-center my-3">
    <div class="spinner-border text-primary" role="status">
      <span class="sr-only">Carregando...</span>
    </div>
    <p style="color:#333; font-weight:bold; margin-top:8px;">Calculando frete...</p>
  </div>

  <div id="fretesContainer" class="mt-3" style="max-width:360px; margin:auto;"></div>

  <p><strong>Endereço:</strong> <span id="endereco"></span></p>

  <div class="form-group mb-2 d-flex justify-content-center">
    <input type="text" class="form-control mr-2" id="numero" placeholder="Número" style="width: 100px; text-align: center;">
    <input type="text" class="form-control" id="complemento" placeholder="Complemento" style="width: 200px;">
  </div>

  <div class="form-check mb-2 d-flex align-items-center" style="margin-left: 120px;">
    <input type="checkbox" class="form-check-input" id="semComplemento" onclick="toggleComplemento()" style="margin-top: 0;">
    <label class="form-check-label" for="semComplemento" style="font-size: 0.9em; margin-left: 5px; font-weight: bold;">Não tenho</label>
  </div>

  <div class="form-group mb-2">
    <input type="text" class="form-control" id="pontoReferencia" placeholder="Ponto de Referência" style="width: 300px; margin: 0 auto;">
  </div>

  <button class="btn btn-primary btn-block mb-2" style="height: 40px; width: 300px; margin: 0 auto; font-weight: bold;" onclick="validarEntrega()">
    Solicitar Entrega
  </button>
  <button class="btn btn-link" onclick="voltarParaPrimeiraTela()">Voltar</button>
</div>

    <!-- Terceira Tela - Concluir Pedido -->
    <div id="terceiraTela" class="hidden text-center">
      <img src="duc.png" alt="Duc Entregas" class="logo mb-3" style="max-width:80px;">
      <h5 class="fw-bold mb-4" style="color:#333;">Resumo do Pedido</h5>
    
      <div class="card mb-3" style="max-width:360px; margin:auto; padding:15px; border-radius:10px; background:#f8f9fa; color:#333; font-size:14px;">
        <p style="margin-bottom:5px;"><strong>Endereço:</strong><br>
          <span id="enderecoTerceiraTela"></span>, 
          <span id="numeroTerceiraTela"></span>
          <span id="complementoTerceiraTela"></span><br>
          <span id="bairroTerceiraTela"></span>, 
          <span id="cidadeTerceiraTela"></span>
          <span id="estadoTerceiraTela"></span><br>
          <span><strong>CEP:</strong> <span id="cepTerceiraTela"></span></span>
        </p>
    
        <p style="margin-bottom:5px;"><strong>Ponto de Referência:</strong> <span id="pontoReferenciaTerceiraTela"></span></p>
    
        <p style="margin-bottom:5px;">
          <strong>Pacote:</strong> <span id="pacoteTerceiraTela"></span><br>
          <strong>Valor do Frete:</strong> <span id="freteTerceiraTela"></span><br>
          <strong>Tipo de Frete:</strong> <span id="tipoFreteTerceiraTela"></span>
        </p>
      </div>
    
      <div class="card mb-3" style="max-width:360px; margin:auto; padding:15px; border-radius:10px; background:#f8f9fa; color:#333; font-size:14px;">
        <div class="form-group mb-3">
          <input type="text" class="form-control form-control-sm" id="nomeCliente" placeholder="Nome" required>
        </div>
        
        <div class="form-group mb-3">
          <input type="tel" class="form-control form-control-sm" id="telefoneCliente" placeholder="Telefone" required oninput="formatarTelefone(this)">
        </div>
        
        <button class="btn btn-custom-orange w-100 mb-2" onclick="finalizarPedido()">
          <i class="fas fa-check-circle"></i> Finalizar Pedido
        </button>
        
        <button class="btn btn-outline-secondary w-100" onclick="voltarParaSegundaTela()">
          <i class="fas fa-arrow-left"></i> Voltar
        </button>
      </div>
    </div>

<script src="https://cdn.jsdelivr.net/npm/cep-promise/dist/cep-promise.min.js"></script>


<script>
function aplicarAdicional(valor) {
  if (valor < 30) return valor + 12;
  if (valor >= 30 && valor <= 49.99) return valor + 15;
  return valor * 1.3;
}

async function buscarCep() {
  const cepInput = document.getElementById('cep').value.trim().replace(/\D/g, '');
  
  // Validação básica do CEP
  if (!cepInput || cepInput.length !== 8 || isNaN(cepInput)) {
    alert('CEP inválido');
    return;
  }

  abrirSegundaTela();
  const loadingEl = document.getElementById('loading');
  loadingEl.classList.remove('hidden');

  try {
    const dados = await cep(cepInput); // função cep() que retorna endereço

    const enderecoEl = document.getElementById('endereco');

    // Checa se temos rua e bairro
    const temEndereco = dados.street && dados.neighborhood;

    if (temEndereco) {
      // Endereço completo
      enderecoEl.innerHTML = `
        <strong>${dados.street}</strong><br>
        ${dados.city || ''} - ${dados.state || ''}, ${dados.neighborhood}, ${dados.cep || cepInput}
      `;
      enderecoEl.contentEditable = "false";
    } else {
      // Endereço incompleto ou não retornou
      // Preenche cidade e estado se existirem
      const cidadeEstado = `${dados.city || ''}${dados.city && dados.state ? ' - ' : ''}${dados.state || ''}`;
      enderecoEl.innerHTML = `
        ${cidadeEstado ? `<strong>${cidadeEstado}</strong><br>` : ''}
        <input type="text" id="enderecoManual" placeholder="Digite seu endereço" class="form-control mb-2">
      `;
      enderecoEl.contentEditable = "true";
    }

    // Calcula fretes
    const fretes = await calcularFrete(cepInput);
    loadingEl.classList.add('hidden');

    const containerFretes = document.getElementById('fretesContainer');
    containerFretes.innerHTML = '<h6>Escolha o frete:</h6>';

    function getIcon(freteName) {
      if (!freteName) return '';
      if (freteName.toLowerCase().includes('pac') || freteName.toLowerCase().includes('sedex')) {
        return `<img src="assets/correios2.png" alt="Correios" style="width:32px; height:auto;">`;
      }
      return '';
    }

    fretes.forEach((frete, index) => {
      const valorBase = parseFloat(frete.price) || 0;
      const valorComRegra = aplicarAdicional(valorBase);
      const valorCheio = valorComRegra * 1.1;
      const valorFinal = valorComRegra;
      const inputId = `frete_${index}`;

      const div = document.createElement('div');
      div.classList.add('frete-card', 'mb-2', 'p-2', 'rounded', 'd-flex', 'justify-content-between', 'align-items-center');
      div.style.border = '1px solid #ccc';
      div.style.cursor = 'pointer';
      div.style.transition = 'background-color 0.2s, border-color 0.2s';

      if ((frete.name || '').toLowerCase().includes('pac')) div.style.backgroundColor = '#e7f3ff';
      else if ((frete.name || '').toLowerCase().includes('sedex')) div.style.backgroundColor = '#fff7e1';
      else div.style.backgroundColor = '#f9f9f9';

      div.innerHTML = `
        <div style="display:flex; align-items:center; gap:10px;">
          <div class="frete-icon" style="transition: transform 0.2s;">${getIcon(frete.name)}</div>
          <div>
            <strong>${frete.name || 'Frete'}</strong><br>
            <small>Entrega: Até ${frete.delivery_time} dia(s)</small>
          </div>
        </div>
        <div style="display:flex; flex-direction: column; align-items:flex-end; gap:3px; position: relative;">
          <span style="text-decoration: line-through; color: #999;">R$ ${valorCheio.toFixed(2)}</span>
          <input type="radio" id="${inputId}" name="freteEscolhido" value="${valorFinal.toFixed(2)}"
                 style="opacity:0; position:absolute; left:0; top:0; width:100%; height:100%; margin:0; cursor:pointer;">
          <label for="${inputId}" style="cursor:pointer;">
            <strong style="color:#007bff;">R$ ${valorFinal.toFixed(2)}</strong>
          </label>
        </div>
      `;

      containerFretes.appendChild(div);

      div.addEventListener('click', () => {
        const radio = document.getElementById(inputId);
        if (radio) radio.checked = true;

        document.querySelectorAll('.frete-card').forEach(c => {
          c.style.borderColor = '#ccc';
          const nome = c.querySelector('strong')?.innerText.toLowerCase();
          if (nome && nome.includes('pac')) c.style.backgroundColor = '#e7f3ff';
          else if (nome && nome.includes('sedex')) c.style.backgroundColor = '#fff7e1';
          else c.style.backgroundColor = '#f9f9f9';

          const cRadio = c.querySelector('input[name="freteEscolhido"]');
          const icon = c.querySelector('.frete-icon');
          if (cRadio && cRadio.checked && icon) icon.style.transform = 'scale(1.2)';
          else if (icon) icon.style.transform = 'scale(1)';
        });

        div.style.borderColor = '#007bff';
        const icon = div.querySelector('.frete-icon');
        if (icon) icon.style.transform = 'scale(1.2)';
      });
    });

    // Seleciona o primeiro frete por padrão
    const primeiroRadio = containerFretes.querySelector('input[name="freteEscolhido"]');
    const primeiroDiv = containerFretes.querySelector('.frete-card');
    if (primeiroRadio && primeiroDiv) {
      primeiroRadio.checked = true;
      primeiroDiv.style.borderColor = '#007bff';
      const icon = primeiroDiv.querySelector('.frete-icon');
      if (icon) icon.style.transform = 'scale(1.2)';
    }

  } catch (error) {
    alert(`Erro: ${error && error.message ? error.message : error}`);
    loadingEl.classList.add('hidden');
  }
}





async function calcularFrete(cep) {
  const pacoteSelecionado = document.querySelector('input[name="pacote"]:checked');
  if (!pacoteSelecionado) { 
    alert("Selecione um pacote"); 
    document.getElementById('loading').classList.add('hidden');
    return []; 
  }

  const pacote = pacoteSelecionado.value;
  let peso, dimensoes;
  switch (pacote) {
    case "P": peso=1; dimensoes={height:10,width:20,length:25}; break;
    case "M": peso=3; dimensoes={height:20,width:25,length:35}; break;
    case "G": peso=6; dimensoes={height:25,width:35,length:40}; break;
    case "XG": peso=10; dimensoes={height:30,width:40,length:50}; break;
    case "XXG": peso=15; dimensoes={height:35,width:50,length:60}; break;
    default: peso=1; dimensoes={height:10,width:20,length:25};
  }

  const payload = { 
    cepDestino: cep, 
    pacote: {weight: peso, height: dimensoes.height, width: dimensoes.width, length: dimensoes.length} 
  };

  try {
    const response = await fetch("https://flaskduc.vercel.app/api/calcular-frete", {
      method:"POST",
      headers:{"Content-Type":"application/json"},
      body:JSON.stringify(payload)
    });
    if(!response.ok) throw new Error(`Erro ${response.status}`);
    const data = await response.json();
    return data || [];
  } catch(e) { 
    alert("Erro ao calcular frete"); 
    return []; 
  } finally {
    // Garante que o loading some, mesmo em erro
    document.getElementById('loading').classList.add('hidden');
  }
}

function abrirSegundaTela() {

  document.getElementById('primeiraTela').classList.add('hidden');
  document.getElementById('segundaTela').classList.remove('hidden');
}

function toggleComplemento() {
  const complementoInput = document.getElementById('complemento');
  complementoInput.disabled = document.getElementById('semComplemento').checked;
  if(complementoInput.disabled) complementoInput.value='';
}

function formatarCep(input) {
  const cep = input.value.replace(/\D/g,''); // Remove tudo que não for número
  input.value = cep.length > 5 ? `${cep.slice(0,5)}-${cep.slice(5,8)}` : cep; // Formata para o padrão XXXXX-XXX
}


function enviarMensagemWhatsApp() {
  window.open(`https://api.whatsapp.com/send?text=Olá, preciso de ajuda para encontrar meu CEP`);
}

function voltarParaPrimeiraTela() {
  // esconder segunda tela e mostrar primeira
  document.getElementById("segundaTela").classList.add("hidden");
  document.getElementById("primeiraTela").classList.remove("hidden");

  // limpar dados da segunda tela
  document.getElementById("fretesContainer").innerHTML = "";
  document.getElementById("endereco").innerText = "";
  document.getElementById("cep").value = "";
  document.getElementById("loading").classList.add("hidden");
}

function voltarParaSegundaTela() {
  document.getElementById('segundaTela').classList.remove('hidden');
  document.getElementById('terceiraTela').classList.add('hidden');
}

function validarEntrega() {
  // Número e complemento
  const numero = document.getElementById('numero').value.trim();
  const complemento = document.getElementById('complemento').value.trim();
  if (!numero) { 
    alert('Informe o número do endereço'); 
    return; 
  }

  // Endereço
  const endereco = document.getElementById('endereco').innerText.split(', ');
  const logradouro = endereco[0];
  const bairro = endereco[1] || "";
  const cidadeUf = (endereco[2] || "").split(' - ');
  const cidade = cidadeUf[0] || "";
  const estado = cidadeUf[1] || "";

  document.getElementById('enderecoTerceiraTela').innerText = logradouro;
  document.getElementById('numeroTerceiraTela').innerText = numero;
  document.getElementById('complementoTerceiraTela').innerText = complemento ? ` ${complemento}` : "";
  document.getElementById('bairroTerceiraTela').innerText = bairro;
  document.getElementById('cidadeTerceiraTela').innerText = cidade + " -";
  document.getElementById('estadoTerceiraTela').innerText = estado;

  // Ponto de referência
  const pontoReferencia = document.getElementById('pontoReferencia').value.trim() || "Não informado";
  document.getElementById('pontoReferenciaTerceiraTela').innerText = pontoReferencia;

  // Pacote selecionado
  const pacoteSelecionado = document.querySelector('input[name="pacote"]:checked').value;
  document.getElementById('pacoteTerceiraTela').innerText = pacoteSelecionado;

  // Frete selecionado
  const freteSelecionadoInput = document.querySelector('input[name="freteEscolhido"]:checked');
  const freteCard = freteSelecionadoInput.closest('.frete-card'); // pega o card completo
  const freteValor = parseFloat(freteSelecionadoInput.value).toFixed(2);

  // Extrai tipo do frete (PAC ou SEDEX)
  let freteTipo = 'Outro';
  const strongNomeFrete = freteCard.querySelector('div > div > strong'); 
  if (strongNomeFrete) {
    const nomeFrete = strongNomeFrete.innerText.toUpperCase();
    if (nomeFrete.includes('PAC')) freteTipo = 'PAC';
    else if (nomeFrete.includes('SEDEX')) freteTipo = 'SEDEX';
  }

  document.getElementById('freteTerceiraTela').innerText = `R$ ${freteValor}`;
  document.getElementById('tipoFreteTerceiraTela').innerText = freteTipo;

  // Mostrar terceira tela e esconder segunda
  document.getElementById('segundaTela').classList.add('hidden');
  document.getElementById('terceiraTela').classList.remove('hidden');
}



function finalizarPedido() {
  // Dados do cliente
  const nome = document.getElementById('nomeCliente').value.trim();
  const telefone = document.getElementById('telefoneCliente').value.trim();
  const pacote = document.getElementById('pacoteTerceiraTela').innerText;

  // Endereço detalhado
  const logradouro = document.getElementById('enderecoTerceiraTela').innerText;
  const numero = document.getElementById('numeroTerceiraTela').innerText;
  const complemento = document.getElementById('complementoTerceiraTela').innerText.trim();
  const bairro = document.getElementById('bairroTerceiraTela').innerText;
  const cidadeUf = document.getElementById('cidadeTerceiraTela').innerText + " " + document.getElementById('estadoTerceiraTela').innerText;
  const cep = document.getElementById('cep').value.trim();

  // Frete selecionado
  const freteInput = document.querySelector('input[name="freteEscolhido"]:checked');
  const freteCard = freteInput.closest('.frete-card');

  // Extrai tipo do frete (PAC ou SEDEX)
  let freteTipo = 'Outro';
  const strongNomeFrete = freteCard.querySelector('div > div > strong'); 
  if (strongNomeFrete) {
    const nomeFrete = strongNomeFrete.innerText.toUpperCase();
    if (nomeFrete.includes('PAC')) freteTipo = 'PAC';
    else if (nomeFrete.includes('SEDEX')) freteTipo = 'SEDEX';
  }

  // Valor do frete
  const freteValor = parseFloat(freteInput.value).toFixed(2);

  // Monta a mensagem sem duplicar complemento
  const mensagem = `Olá! Gostaria de solicitar uma entrega.\n\n${telefone}\n${nome}\n${logradouro}, ${numero}${complemento ? ' ' + complemento : ''}\n${bairro}, ${cidadeUf}\n${cep}\n\nValor do Frete: R$ ${freteValor}\nFrete: ${freteTipo}\nPacote: ${pacote}`;

  // Abre WhatsApp com a mensagem
  window.open(`https://api.whatsapp.com/send?phone=5521966904641&text=${encodeURIComponent(mensagem)}`);
}



document.querySelectorAll('input[name="pacote"]').forEach(input => {
  input.addEventListener('change', () => {
    // Remove a classe active de todos os pacotes
    document.querySelectorAll('input[name="pacote"]').forEach(r => r.parentElement.classList.remove('active'));
    // Adiciona a classe active no pacote selecionado
    input.parentElement.classList.add('active');
  });
});
</script>

</body>
</html>
